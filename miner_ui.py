#!/data/data/com.termux/files/usr/bin/python3
import os
import time
import sys
from collections import deque

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
MAX_LINES = 8
LOG_FILE = os.path.expanduser("~/ccminer/ccminer  -c ~/ccminer/config.json")

def clear_screen():
    os.system('clear')

def display_header():
    print("‚ö° VRSC MINER - REAL-TIME MONITOR")
    print("‚îÅ" * 40)

def process_line(line):
    """‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢"""
    line = (line.replace("Accepted", "‚úÖ ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö")
            .replace("diff", "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å")
            .replace("kH/s", "kH/s")
            .replace("CPU", "üå°Ô∏è CPU")
            .replace("NET New job", "üì∂ ‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà"))
    return line.strip()

def main():
    log_history = deque(maxlen=MAX_LINES)
    
    try:
        while True:
            clear_screen()
            display_header()
            
            # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (50 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢)
            if os.path.exists(LOG_FILE):
                with open(LOG_FILE, 'r') as f:
                    lines = f.readlines()[-50:]
                
                # ‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà
                for line in lines:
                    if any(x in line for x in ["Accepted", "CPU", "NET"]):
                        processed = process_line(line)
                        log_history.append(processed)
            
            # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
            for line in log_history:
                print(line)
            
            print("\n‚îÅ" * 40)
            print("‡∏Å‡∏î Ctrl+C ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î")
            time.sleep(2)
            
    except KeyboardInterrupt:
        print("\n‚ùå ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")

if __name__ == "__main__":
    main()
