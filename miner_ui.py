import subprocess
import re
import time

# ANSI ‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
class Style:
    RESET = "\033[0m"
    RED = "\033[91m"
    YELLOW = "\033[93m"
    CYAN = "\033[96m"
    GREEN = "\033[92m"

# ‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
def highlight_important(line):
    # ALARM
    if "alarm" in line.lower():
        return f"{Style.RED}‚ö†Ô∏è  ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: {line.strip()}{Style.RESET}"

    # New Job
    if "new job" in line.lower():
        return f"{Style.YELLOW}üì• ‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà: {line.strip()}{Style.RESET}"

    # Accepted
    if "accepted" in line.lower():
        return f"{Style.GREEN}‚úÖ ‡πÅ‡∏ä‡∏£‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {line.strip()}{Style.RESET}"

    # Rejected
    if "rejected" in line.lower():
        return f"{Style.RED}‚ùå ‡πÅ‡∏ä‡∏£‡πå‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò: {line.strip()}{Style.RESET}"

    # Difficulty
    if "diff" in line.lower():
        return f"{Style.YELLOW}üéØ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å: {line.strip()}{Style.RESET}"

    # ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß MH/s
    if "mh/s" in line.lower():
        mh_match = re.search(r'([0-9.]+)\s*mH/s', line, re.IGNORECASE)
        if mh_match:
            mh = float(mh_match.group(1))
            if mh >= 2.0:
                return f"{Style.CYAN}‚ö° ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß: {mh_match.group(1)} MH/s{Style.RESET}"

    return None  # ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç

def run_clean_monitor():
    process = subprocess.Popen(
        ['./start.sh'],
        stdout=subprocess.PIPE,
        stderr=subprocess.STDOUT,
        universal_newlines=True
    )

    try:
        for line in process.stdout:
            line = line.strip()
            if not line:
                continue
            highlight = highlight_important(line)
            if highlight:
                print(highlight)
                time.sleep(0.01)
    except KeyboardInterrupt:
        process.terminate()
        print("\n‚õî ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß")
    except Exception as e:
        process.terminate()
        print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

if __name__ == "__main__":
    run_clean_monitor()
